# =========================
# Stage 1: build vendor với Composer (ALPINE)
# =========================
FROM composer:2 AS vendor
ENV COMPOSER_ALLOW_SUPERUSER=1 \
    COMPOSER_MEMORY_LIMIT=-1
WORKDIR /app

# CÀI git + unzip cho composer trên Alpine
RUN apk add --no-cache git unzip

# Copy định nghĩa deps
COPY composer.json ./
# (nếu có lock thì mở dòng dưới)
# COPY composer.lock ./

# Cài vendor (an toàn cho build stage)
RUN composer install \
    --no-dev --no-interaction --no-progress --prefer-dist \
    --no-scripts --ignore-platform-reqs


# =========================
# Stage 2: Runtime Nginx + PHP-FPM (Alpine gọn nhẹ)
# =========================
FROM alpine:3.20

# Cài nginx, php-fpm và các extension Laravel cần
RUN apk add --no-cache \
      nginx supervisor curl \
      php82 php82-fpm php82-opcache php82-pdo php82-pdo_mysql \
      php82-mbstring php82-zip php82-intl php82-cli php82-json php82-session \
      php82-fileinfo php82-tokenizer php82-dom php82-xml php82-curl \
      php82-openssl php82-simplexml
      # sau khi apk add php82* ...
RUN ln -s /usr/bin/php82 /usr/bin/php

# Tạo user 'www' chuyên chạy php-fpm
RUN addgroup -S www && adduser -S www -G www

# Đặt php-fpm chạy bằng user 'www'
RUN sed -i 's/^user = .*/user = www/' /etc/php82/php-fpm.d/www.conf \
 && sed -i 's/^group = .*/group = www/' /etc/php82/php-fpm.d/www.conf

# Sau khi COPY code vào /var/www, cấp quyền đúng
# (đặt dòng này sau "COPY . /var/www" và "COPY --from=vendor /app/vendor /var/www/vendor")
RUN mkdir -p /var/www/storage/logs /var/www/storage/framework/{cache,sessions,views} \
 && chown -R www:www /var/www/storage /var/www/bootstrap/cache \
 && chmod -R 775 /var/www/storage /var/www/bootstrap/cache


WORKDIR /var/www

# Copy toàn bộ code Laravel vào runtime
COPY . /var/www
# Copy vendor đã build từ stage 1
COPY --from=vendor /app/vendor /var/www/vendor

# PHP-FPM lắng nghe 9000
RUN sed -i 's|^listen = .*$|listen = 0.0.0.0:9000|g' /etc/php82/php-fpm.d/www.conf \
 && sed -i 's|^;clear_env = no|clear_env = no|g' /etc/php82/php-fpm.d/www.conf

# Nginx virtual host đơn giản
RUN printf 'server {\n\
  listen 80;\n\
  server_name _;\n\
  root /var/www/public;\n\
  index index.php;\n\
  location / { try_files $uri $uri/ /index.php?$query_string; }\n\
  location ~ \\.php$ {\n\
    include fastcgi_params;\n\
    fastcgi_pass 127.0.0.1:9000;\n\
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\
  }\n\
}\n' > /etc/nginx/http.d/default.conf

# Supervisor để chạy đồng thời php-fpm + nginx
RUN printf '[supervisord]\n\
nodaemon=true\n\
[program:php-fpm]\n\
command=/usr/sbin/php-fpm82 -F\n\
[program:nginx]\n\
command=/usr/sbin/nginx -g "daemon off;"\n' > /etc/supervisord.conf

# Tạo .env nếu thiếu + generate key (không fail build nếu artisan chưa sẵn)
RUN php -r "file_exists('.env') || copy('.env.example', '.env');" || true \
 && php artisan key:generate || true

EXPOSE 80
CMD ["/usr/bin/supervisord","-c","/etc/supervisord.conf"]
