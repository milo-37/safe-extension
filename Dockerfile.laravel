# ========== STAGE 1: Composer (vendor) ==========
FROM composer:2 AS vendor
ENV COMPOSER_ALLOW_SUPERUSER=1 COMPOSER_MEMORY_LIMIT=-1
WORKDIR /app
RUN apk add --no-cache git unzip
COPY composer.json composer.lock ./
# CHẶN scripts vì chưa có file artisan ở stage này
RUN composer install \
  --no-dev --no-interaction --no-progress --prefer-dist \
  --optimize-autoloader --no-scripts


# ========== STAGE 2: Node (build Vite) ==========
FROM node:18-alpine AS assets
WORKDIR /app
# chỉ copy những thứ cần để cache
COPY package*.json ./
RUN npm ci
# copy source cho vite
COPY resources resources
COPY vite.config.* ./
COPY tailwind.config.* /app/
COPY postcss.config.* /app/
# build ra public/build
RUN npm run build

# ========== STAGE 3: Runtime (Nginx + PHP-FPM) ==========
FROM alpine:3.20
RUN apk add --no-cache \
     nginx supervisor curl \
    php82 php82-fpm php82-opcache php82-pdo php82-pdo_mysql \
    php82-mbstring php82-zip php82-intl php82-cli php82-json php82-session \
    php82-fileinfo php82-tokenizer php82-dom php82-xml php82-curl \
    php82-openssl php82-simplexml php82-phar  
RUN ln -s /usr/bin/php82 /usr/bin/php

# LẤY composer để chạy sau khi có full source
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# user chạy web
RUN addgroup -S www && adduser -S www -G www

WORKDIR /var/www
# copy code
COPY . /var/www
# copy vendor & assets đã build
COPY --from=vendor /app/vendor /var/www/vendor
COPY --from=assets /app/public/build /var/www/public/build

# cấu hình php-fpm chạy bằng www + clear_env
RUN sed -i 's|^listen = .*$|listen = 0.0.0.0:9000|' /etc/php82/php-fpm.d/www.conf \
 && sed -i 's|^;clear_env = no|clear_env = no|' /etc/php82/php-fpm.d/www.conf \
 && sed -i 's|^user = .*$|user = www|' /etc/php82/php-fpm.d/www.conf \
 && sed -i 's|^group = .*$|group = www|' /etc/php82/php-fpm.d/www.conf

# nginx vhost
RUN printf 'server {\n\
  listen 80;\n\
  server_name _;\n\
  root /var/www/public;\n\
  index index.php;\n\
  location / { try_files $uri $uri/ /index.php?$query_string; }\n\
  location ~ \\.php$ {\n\
    include fastcgi_params;\n\
    fastcgi_pass 127.0.0.1:9000;\n\
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n\
  }\n\
}\n' > /etc/nginx/http.d/default.conf

# supervisor
RUN printf '[supervisord]\n\
nodaemon=true\n\
[program:php-fpm]\n\
command=/usr/sbin/php-fpm82 -F\n\
[program:nginx]\n\
command=/usr/sbin/nginx -g "daemon off;"\n' > /etc/supervisord.conf

# chuẩn bị thư mục + quyền
RUN mkdir -p storage/logs storage/framework/{cache,sessions,views} bootstrap/cache \
 && chown -R www:www storage bootstrap/cache public \
 && chmod -R 775 storage bootstrap/cache \
 && composer dump-autoload -o --no-dev --no-interaction \
 && php artisan package:discover --ansi || true

# KHÔNG chạy artisan trong lúc build (tránh phụ thuộc DB)
EXPOSE 80
CMD ["/usr/bin/supervisord","-c","/etc/supervisord.conf"]
